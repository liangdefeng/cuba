selectEntityType#
# Copyright (c) 2008-2016 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
categories=Dynamic Attributes
attributes=Attributes
editorCaption=Category editor
localizedEnumerationWindow.caption = Enumeration editor
isDefault=Default
code=Code

localeGroupBox.caption = Name localization

filter=Filter

categoryTable.create=Create category
categoryTable.edit=Edit category
categoryTable.remove=Remove category

categoryTable.applyChanges=Apply changes
categoryAttrsTable.create=Create
categoryAttrsTable.edit=Edit
categoryAttrsTable.remove=Remove

AttributeEditor.caption=Attribute editor

STRING=String
INTEGER=Integer
DOUBLE=Double
DECIMAL=Fixed-point number
BOOLEAN=Boolean
ENTITY=Entity
DATE=Date and time
DATE_WITHOUT_TIME=Date
ENUMERATION=Enumeration

true=Yes
false=No

dataType=Attribute type
defaultValue=Default value
currentDate=Current date
entityType=Entity type

entityNotFound=Entity not found
screen=Entity selection screen
required=Required attribute

nameRequired=Name required
dataTypeRequired=Attribute type required
codeRequired=Code required
entityTypeRequired=Entity type required
entityScreenRequired=Entity screen required
enumRequired=Enumeration required
uniqueName=Attribute with same name already exists
uniqueCode=Attribute with same code already exists
widthValidationMsg=Width is incorrect
rowsCountValidationMsg=Rows count should be a number between 1 and 40
minGreaterThanMax=Minimum value can't be greater than maximum
defaultLessThanMin=Default value can't be less than minimum
defaultGreaterThanMax=Default value can't be greater than maximum
dependsOnAttributesValidationMsg=At least one attribute must be present in the “Attribute depends on” list, otherwise, the recalculation script will never be executed

msgTrue=True
msgFalse=False

lookup = Drop list
targetScreens=Target screens

ScreenAndComponent.screen=Screen
ScreenAndComponent.component=Component ID
sys$ScreenAndComponent.screen=Screen
sys$ScreenAndComponent.component=Component ID

targetScreensTable.create=Add target screen
targetScreensTable.remove=Remove target screen

attributesLocation.sourceColumnCaption=Attributes
attributesLocation.columnCaption=Column
attributesLocation.saveBtnCaption=Save configuration
attributesLocation.columnsCountLookupCaption=Columns count

caption.mainTab=General
caption.localizedNameTab=Localization
caption.targetScreensTab=Visibility
caption.columnSettingsTab=Column Settings
caption.calculatedAttrsAndOptionsTab=Calculated values and options
caption.dynamicAttributesLocation=Attributes Location
notification.changesApplied=Changes have been applied
constraintWizard=Constraint Wizard
selectEntityType=Select entity type

joinClause=Join Clause
joinClauseHelp=A value of this field is added to the "from" query clause. It should begin with a comma, "join" or "left join".\
  <br/>Dynamic attributes values in the script are available by the <code>entity</code> variable:\
  <br/>${entity.+&lt;dynamicAttrCode&gt;}, where &lt;dynamicAttrCode&gt; - code of the corresponding dynamic attribute\
  <br/>The {E} placeholder should be used as an alias of the entity being extracted. On execution of the query, it will be replaced with a real alias, specified in the query.\
  <br/>\
  <br/>For example:\
  <br/><code>join {E}.seller s</code>

whereClause=Where Clause
whereClauseHelp=A value of this field is added to the "where" query clause using "and" condition. The "where" word is not needed, as it will be added automatically.\
  <br/>The {E} placeholder should be used as an alias of the entity being extracted. On execution of the query, it will be replaced with a real alias, specified in the query.\
  <br/>Dynamic attributes values in the script are available by the <code>entity</code> variable.\
  <br/>\
  <br/>For example:\
  <br/><code>{E}.salary > ${entity.+&lt;dynamicAttrCode&gt;} and {E}.department = 'abc'</code>\
  <br/>where &lt;dynamicAttrCode&gt; - code of the corresponding dynamic attribute

validatorScript=Custom validation
validatorScriptHelp=Allows you to apply a Groovy script on the parameter before saving it.\
  <br/>In case of failed validation a Groovy script should return error message. Otherwise \
  a script should not return any value or return <code>null</code>. \
  <br/>The value is available in the script by the <code>value</code> variable. \
  For error message it uses Groovy string \
  and it is possible to use '$value' key for formatted output.\
  <br/>\
  <br/>For example:\
  <br/><code>if (!value.startsWith("correctValue")) return "the value '\\$value' is incorrect"</code>

recalculationScript=Recalculation script
recalculationScriptHelp=Groovy script used to recalculate the value of this parameter.\
  <br/>Script must return a new value of the parameter. It is possible to use <code>entity</code> and \
  <code>dynamicAttributes</code> variables in the script.\
  <br/><code>entity</code> - current editing entity. \
  <br/><code>dynamicAttributes</code> - <code>Map<String, Object></code> where key - attribute code, \
  value - value object.\
  <br/>Script will be evaluated each time after one of the 'depends on' attributes values will be changed.\
  <br/>\
  <br/>If this script is defined, then field will be not editable.\
  <br/>\
  <br/>For example:\
  <br/><code>if (entity.getValue("+testStringAttr") == null) return 1 else return entity.getValue("+testStringAttr").length()</code>

optionsLoaderGroovyScript=Options loader groovy script
optionsLoaderGroovyScriptHelp=Allows you to load dynamic attribute options by a Groovy script.\
  <br/>A script should return options list. The entity with dynamic attributes is available \
  in the script by the <code>entity</code> variable.\
  <br/>\
  <br/>For example:\
  <br/><code>return ['code_1', 'code_2', entity.code]</code>

optionsLoaderSqlScript=Options loader SQL script
optionsLoaderSqlScriptHelp=Allows you to load dynamic attribute options by a SQL script.\
  <br/>A script should return options list.\
  <br/>Dynamic attributes values in the script are available by the <code>entity</code> variable.\
  <br/>\
  <br/>For example:\
  <br/><code>select street from db_Address e where e.strName = ${entity.+&lt;dynamicAttrCode&gt;}</code>\
  <br/>where &lt;dynamicAttrCode&gt; - code of the corresponding dynamic attribute

lookupContextHelp=Allows you to use lookup field to select attribute values. \
  Configure the list of possible values on the "Calculated values and options". \
  It's possible to configure join and where clause for an entity attribute there.