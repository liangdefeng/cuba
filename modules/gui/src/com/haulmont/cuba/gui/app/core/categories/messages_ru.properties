#
# Copyright (c) 2008-2016 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
categories=Динамические атрибуты
attributes=Атрибуты
editorCaption=Редактирование категории
localizedEnumerationWindow.caption = Редактирование перечисления
isDefault=По умолчанию
code=Код

localeGroupBox.caption = Локализация названия

filter=Фильтр

categoryTable.create=Создать категорию
categoryTable.edit=Изменить категорию
categoryTable.remove=Удалить категорию

categoryTable.applyChanges=Применить изменения
categoryAttrsTable.create=Создать
categoryAttrsTable.edit=Изменить
categoryAttrsTable.remove=Удалить

AttributeEditor.caption=Редактирование атрибута

STRING=Строка
INTEGER=Целое число
DOUBLE=Вещественное число
DECIMAL=Число с фиксированной точкой
BOOLEAN=Логическое
ENTITY=Сущность
DATE=Дата и время
DATE_WITHOUT_TIME=Дата
ENUMERATION=Перечисление

true=Да
false=Нет

dataType=Тип атрибута
defaultValue=Значение по умолчанию
currentDate=Текущая дата
entityType=Тип сущности
screen=Экран выбора сущности
required=Обязательный атрибут

entityNotFound=Сущность не найдена

nameRequired=Заполните поле "Название"
dataTypeRequired=Заполните поле "Тип атрибута"
entityTypeRequired=Заполните поле "Тип сущности"
entityScreenRequired=Заполните поле "Экран выбора сущности"
widthValidationMsg=Поле "Ширина" указано в некорректном формате
rowsCountValidationMsg=Поле "Количество строк" должно быть числом от 1 до 40
enumRequired=Заполните поле "Перечисление"
minGreaterThanMax=Минимальне значение не может быть больше максимального
defaultLessThanMin=Значение по умолчанию не может быть меньше минимального
defaultGreaterThanMax=Значение по умолчанию не может быть больше максимального
dependsOnAttributesValidationMsg=В списке «Атрибут зависит от» должен присутствовать хотя бы один атрибут, иначе скрипт пересчета никогда не будет выполнен

msgTrue=Да
msgFalse=Нет

uniqueName=Атрибут с таким названием уже существует
uniqueCode=Атрибут с таким кодом уже существует

lookup = Выпадающий список
targetScreens=Экраны для показа

ScreenAndComponent.screen=Экран
ScreenAndComponent.component=Идентификатор компонента
sys$ScreenAndComponent.screen=Экран
sys$ScreenAndComponent.component=Идентификатор компонента

attributesLocation.sourceColumnCaption=Атрибуты
attributesLocation.columnCaption=Столбец
attributesLocation.saveBtnCaption=Сохранить конфигурацию
attributesLocation.columnsCountLookupCaption=Количество столбцов

caption.mainTab=Общее
caption.localizedNameTab=Локализация
caption.targetScreensTab=Видимость
caption.columnSettingsTab=Настройки колонки
caption.calculatedAttrsAndOptionsTab=Вычислимые значения и опции
caption.dynamicAttributesLocation=Расположение атрибутов
targetScreensTable.create=Добавить экран
targetScreensTable.remove=Удалить экран
codeRequired=Заполните поле "Код"

notification.changesApplied=Изменения применены
constraintWizard=Мастер создания ограничения
selectEntityType=Выберите тип сущности

joinClause=Оператор Join
joinClauseHelp=Значение данного поля добавляется в выражение "from" запроса. Оно должно начинаться с запятой или слов "join" или "left join".\
  <br/>Значения динамических атрибутов доступны в скрипте через переменную <code>entity</code>:\
  <br/>${entity.+&lt;dynamicAttrCode&gt;}, где &lt;dynamicAttrCode&gt; - код соответствующего динамического атрибута\
  <br/>В качестве алиаса извлекаемой сущности необходимо использовать строку {E}. При выполнении запросов она будет заменена на реальный алиас, заданный в запросе.\
  <br/>\
  <br/>Например:\
  <br/><code>join {E}.seller s</code>

whereClause=Оператор Where
whereClauseHelp=Значение данного поля добавляется в выражение "where" запроса по условию "and" (И). Само слово "where" писать не нужно, оно будет добавлено автоматически, даже если исходный запрос его не содержал.\
  <br/>В качестве алиаса извлекаемой сущности необходимо использовать строку {E}. При выполнении запросов она будет заменена на реальный алиас, заданный в запросе.\
  <br/>Значения динамических атрибутов доступны в скрипте через переменную <code>entity</code>.\
  <br/>\
  <br/>Например:\
  <br/><code>{E}.salary > ${entity.+&lt;dynamicAttrCode&gt;} and {E}.department = 'abc'</code><br/>\
  где &lt;dynamicAttrCode&gt; - код соответствующего динамического атрибута

validatorScript=Скрипт валидации
validatorScriptHelp=Позволяет применить пользовательский Groovy скрипт для проверки валидности значения.\
  <br/>В случае неуспешной валидации, скрипт должен вернуть сообщение об ошибке. В противном случае \
  скрипт не должен возвращать ничего или может вернуть <code>null</code>. \
  <br/>Проверяемое значение доступно в скрипте по переменной <code>value</code>. \
  Для сообщения об ошибке используется Groovy строка, \
  ключ '$value' может быть использован в сообщении для формирования результата.\
  <br/>\
  <br/>Пример:\
  <br/><code>if (!value.startsWith("correctValue")) return "the value '\\$value' is incorrect"</code>

recalculationScript=Скрипт пересчета
recalculationScriptHelp=Groovy скрипт, используемый для пересчета значения атрибута.\
  <br/>Скрипт должен возвращать новое значение параметра. В скрипте могут использоваться переменные \
  <code>entity</code> и <code>dynamicAttributes</code>.\
  <br/><code>entity</code> - редактируемая сущность. \
  <br/><code>dynamicAttributes</code> - <code>Map<String, Object></code>, где key - код атрибута, \
  value - значение динамического атрибута.\
  <br/>Скрипт выполняется каждый раз после изменения значения одного из атрибутов, от которых зависит данный атрибут.\
  <br/>\
  <br/>Если скрипт задан, то поле ввода для атрибута будет нередактируемым.\
  <br/>\
  <br/>Пример:\
  <br/><code>if (entity.getValue("+testStringAttr") == null) return 1 else return entity.getValue("+testStringAttr").length()</code>

optionsLoaderGroovyScript=Groovy скрипт загрузки списка значений
optionsLoaderGroovyScriptHelp=Скрипт позволяет загрузить допустимый список значений \
  для динамического аттрибута в виде <code>java.util.List</code>.\
  <br/>Сущность вместе с динамическими аттрибутами доступна в скрипте \
  по следующей <code>entity</code> переменной.\
  <br/>\
  <br/>Например:\
  <br/><code>return ['code_1', 'code_2', entity.code]</code>

optionsLoaderSqlScript=SQL скрипт загрузки списка значений
optionsLoaderSqlScriptHelp=Скрипт позволяет загрузить допустимый список значений\
  <br/>для динамического аттрибута в виде <code>java.util.List</code>.\
  <br/>Значения динамических атрибутов доступны в скрипте через переменную <code>entity</code>.\
  <br/>\
  <br/>Например:\
  <br/><code>select street from db_Address e where e.strName = ${entity.+&lt;dynamicAttrCode&gt;}</code>\
  <br/>где &lt;dynamicAttrCode&gt; - код соответствующего динамического атрибута

lookupContextHelp=Позволяет вам выбирать значения аттрибута из выпадающего списка. \
  Список допустимых значений можно настроить на вкладке "Вычислимые значения и опции". \
  Здесь же вы можете настроить where и join ограничения для аттрибута типа сущность.